## Puerto de la aplicaci�n
# (si has activado https, es por defecto el del SSL)
# Tomamos el puerto de la variable de entorno PORT
server.port=${PORT:6983}
# puerto http
server.http.port=${PORT:6980}
# Compresion de datos
server.compression.enabled=${COMPRESS_ENABLED:true}
# server.compression.mime-types=text/html,text/xml,text/plain,text/css,application/json,application/javascript
server.compression.min-response-size=1024
## Otras configuraciones
project.name=Tenistas API REST Spring Boot
spring.jackson.mapper.default-view-inclusion=true
##  Locale
# Configuramos el locale en Espa�a, si no fechas, numeros y monedas puede que no salgan bien.
spring.web.locale=es_ES
spring.web.locale-resolver=fixed
##  Para que muestre el mensaje de error de excepciones
server.error.include-message=always
## directorio de almacenamiento
upload.root-location=upload-dir
upload.delete=true
## Logger
# Log minimo, si no se especifica, por defecto es INFO
# logging.level.root=DEBUG
## Base de datos de desarrollo
# En fichero embebida o en memoria, t� eliges
# spring.datasource.url=jdbc:h2:./productosapirest
spring.datasource.url=jdbc:h2:mem:productosapirest
# Usuario y contrase�a de la base de datos
spring.datasource.username=sa
#spring.datasource.password=password
# Habilitamos la consola de H2
http=//localhost:{server.port}/h2-console
# En nuestro caso http://localhost:69680/h2-console
spring.h2.console.enabled=true
# Habilitamos los mensajes sql en el log para ver las consultas
spring.jpa.show-sql=true
# Habilitamos que cargue los datos de prueba en la base de datos
# estos datos los carga del fichero data.sql del directorio resources
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.sql.init.mode=always
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
##JWT Configuraci�n de secreto y tiempo de token
jwt.secret-key=Se�0r@DeJavaYSpringB00tT0keN2023-MeGustanLosPepinosDeLeganesSonGrandesYMaduros?$
jwt.expiration=86400000
jwt.refresh-token=604800000
## SSL
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:cert/server_keystore.p12
# La contrase�a usada para generar el certificado
server.ssl.key-store-password=1234567
# El alias usado para mapear o referenciar el certificado
server.ssl.key-alias=serverKeyPair
server.ssl.enabled=true




